<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		"  default-autowire="byName">
		
	<context:component-scan base-package="com.meitun.payment.dao.mybatis com.meitun.payment.service.impl"/>
	<context:annotation-config />
		
	<bean id="master_payment_data_source" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" lazy-init="false">
		<property name="driverClassName" value="#{meta['dataSource.driverClassName']}" />
		<property name="url" value="#{meta['dataSource.master.url']}" />
		<property name="username" value="#{meta['dataSource.master.username']}" />
		<property name="password" value="#{meta['dataSource.master.password']}" />
		<property name="initialSize" value="#{meta['dataSource.master.initialPoolSize']}" />
		<property name="maxActive" value="#{meta['dataSource.master.maxPoolSize']}" />
		<property name="maxWait" value="#{meta['dataSource.master.maxIdleTime']}" />
		<property name="poolPreparedStatements" value="true" />
		<property name="validationQuery" value="select 1 " />
	</bean>
	
	 <bean id="slave_payment_data_source" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" lazy-init="false">
		<property name="driverClassName" value="#{meta['dataSource.driverClassName']}" />
		<property name="url" value="#{meta['dataSource.master.url']}" />
		<property name="username" value="#{meta['dataSource.master.username']}" />
		<property name="password" value="#{meta['dataSource.master.password']}" />
		<property name="initialSize" value="#{meta['dataSource.master.initialPoolSize']}" />
		<property name="maxActive" value="#{meta['dataSource.master.maxPoolSize']}" />
		<property name="maxWait" value="#{meta['dataSource.master.maxIdleTime']}" />
		<property name="poolPreparedStatements" value="true" />
		<property name="validationQuery" value="select 1 " />
	</bean>
	
	<bean id="dataSource" class="com.meitun.payment.datasource.PaymentDataSource" ><!-- 读写分离配置 -->    
        <property name="targetDataSources">  
            <map key-type="java.lang.String">  
                <entry value-ref="master_payment_data_source" key="master_payment_data_source"></entry>  
                <entry value-ref="slave_payment_data_source" key="slave_payment_data_source"></entry>  
            </map>  
        </property>  
        <property name="defaultTargetDataSource" ref="master_payment_data_source" >  
        </property>  
    </bean>  
	<bean id="monitorMysqlSlave" class="com.meitun.db.MonitorMysqlSlave">
		<property name="printSqlException" value="false"></property>
	</bean>
	<!-- mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="transactionManager"
		class="com.meitun.payment.datasource.MeitunDataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>